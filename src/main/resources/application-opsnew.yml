spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      yl-ops201907:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201907?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      names: yl-ops201907,yl-ops201908,yl-ops201909,yl-ops201910,yl-ops201911,yl-ops201912,yl-ops202001,yl-ops202002,yl-ops202003,yl-ops202004
      yl-ops201908:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201908?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops201909:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201909?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops201910:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201910?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops201911:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201911?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops201912:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops201912?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops202001:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops202001?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops202002:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops202002?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops202003:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops202003?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
      yl-ops202004:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.212:3306/yl_ops202004?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: yldbuser
        password: yldev-123
    sharding:
      default-database-strategy:
        inline:
          sharding-column: list_id
          algorithm-expression: yl-ops$->{new Date().format("yyyyMM")}
      binding-tables:
        - abnormal_piece_scan_list
        - arrival_scan_list
        - delivery_out_stock_list
        - express_collection_list
        - headless_register_list
        - loading_scan_list
        - pack_scan_list
        - receipt_list
        - remain_storage_scan_list
        - send_scan_list
        - signing_scan_list
        - unloading_scan_list
        - unpack_scan_list
      tables:
        # 按scan_time年月进行分库，按id的hash进行分表
        abnormal_piece_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: abnormal_piece_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        arrival_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: arrival_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        delivery_out_stock_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: delivery_out_stock_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        express_collection_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: express_collection_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        headless_register_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: headless_register_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        loading_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: loading_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        pack_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: pack_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        receipt_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: receipt_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        remain_storage_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: remain_storage_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        send_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: send_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        signing_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: signing_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        unloading_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: unloading_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
        unpack_scan_list:
          table-strategy:
            inline:
              sharding-column: list_id
              algorithm-expression: unpack_scan_list$->{ Math.abs(list_id.hashCode()) % 32}
          database-strategy:
            inline:
              sharding-column: scan_time
              algorithm-expression: yl-ops$->{ new java.text.SimpleDateFormat("yyyyMM").format(scan_time)}
